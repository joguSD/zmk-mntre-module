/dts-v1/;

#include <rpi_pico/rp2040.dtsi>
#include <dt-bindings/led/led.h>
#include <dt-bindings/zmk/matrix_transform.h>
#include "reform-pinctrl.dtsi"

/ {

    chosen {
        zephyr,sram = &sram0;
        zephyr,flash = &flash0;
        zephyr,flash-controller = &ssi;
        zephyr,code-partition = &code_partition;
        zephyr,display = &oled;

        zmk,kscan = &kscan0;
        zmk,matrix-transform = &default_transform;
        zmk,underglow = &led_strip;
    };

    aliases {
        watchdog0 = &wdt0;
    };

    xtal_clk: xtal-clk {
        compatible = "fixed-clock";
        clock-frequency = <12000000>;
        #clock-cells = <0>;
    };

    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <14>;
        rows = <6>;

//  ------- Switch Matrix ----------
//
//  Column     0   |    1  |    2  |    3  |    4  |    5  |    6  |    7  |    8  |    9  |    10  |    11  |    12  |    13  |
//        =====================================================================================================================|
//  Row 0 ||   S0  |   S1  |   S2  |   S3  |   S4  |   S5  |   S6  |   S7  |   S8  |   S9  |   S10  |   S11  |   S12  |   S13  |
//  Row 1 ||   S0  |   S1  |   S2  |   S3  |   S4  |   S5  |   S6  |   S7  |   S8  |   S9  |   S10  |   S11  |   S12  |   S13  |
//  Row 2 ||   S0  |   S1  |   S2  |   S3  |   S4  |   S5  |   S6  |   S7  |   S8  |   S9  |   S10  |   S11  |   S12  |   S13  |
//  Row 3 ||   S0  |   S1  |   S2  |   S3  |   S4  |   S5  |   S6  |   S7  |   S8  |   S9  |   S10  |   S11  |   S12  |        |
//  Row 4 ||   S0  |   S1  |   S2  |   S3  |   S4  |   S5  |   S6  |   S7  |   S8  |   S9  |   S10  |   S11  |   S12  |   S13  |
//  Row 5 ||   S0  |   S1  |   S2  |   S3  |   S4  |       |   S5  |   S6  |   S7  |   S8  |   S9   |   S10  |        |        |
//        ----------------------------------------------------------------------------------------------------------------------
        map = <
            RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5) RC(0,6) RC(0,7) RC(0,8) RC(0,9) RC(0,10) RC(0,11) RC(0,12) RC(0,13)
            RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5) RC(1,6) RC(1,7) RC(1,8) RC(1,9) RC(1,10) RC(1,11) RC(1,12) RC(1,13)
            RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5) RC(2,6) RC(2,7) RC(2,8) RC(2,9) RC(2,10) RC(2,11) RC(2,12) RC(2,13)
            RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5) RC(3,6) RC(3,7) RC(3,8) RC(3,9) RC(3,10) RC(3,11) RC(3,12)
            RC(4,0) RC(4,1) RC(4,2) RC(4,3) RC(4,4) RC(4,5) RC(4,6) RC(4,7) RC(4,8) RC(4,9) RC(4,10) RC(4,11) RC(4,12) RC(4,13)
            RC(5,0) RC(5,1) RC(5,2) RC(5,3) RC(5,4)         RC(5,6) RC(5,7) RC(5,8) RC(5,9) RC(5,10) RC(5,11)
        >;
    };

    kscan0: kscan {
        compatible = "zmk,kscan-gpio-matrix";

        diode-direction = "col2row";
        row-gpios
            = <&gpio0 23 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&gpio0 22 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&gpio0 21 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&gpio0 20 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&gpio0 19 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&gpio0 18 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            ;
        col-gpios
            = <&gpio0 6  GPIO_ACTIVE_HIGH>
            , <&gpio0 7  GPIO_ACTIVE_HIGH>
            , <&gpio0 8  GPIO_ACTIVE_HIGH>
            , <&gpio0 9  GPIO_ACTIVE_HIGH>
            , <&gpio0 10 GPIO_ACTIVE_HIGH>
            , <&gpio0 11 GPIO_ACTIVE_HIGH>
            , <&gpio0 12 GPIO_ACTIVE_HIGH>
            , <&gpio0 13 GPIO_ACTIVE_HIGH>
            , <&gpio0 14 GPIO_ACTIVE_HIGH>
            , <&gpio0 15 GPIO_ACTIVE_HIGH>
            , <&gpio0 16 GPIO_ACTIVE_HIGH>
            , <&gpio0 17 GPIO_ACTIVE_HIGH>
            , <&gpio0 3  GPIO_ACTIVE_HIGH>
            , <&gpio0 2  GPIO_ACTIVE_HIGH>
            ;
    };
};


&flash0 {
    reg = <0x10000000 DT_SIZE_M(4)>;

    partitions {
        compatible = "fixed-partitions";
        #address-cells = <1>;
        #size-cells = <1>;

        /* Reserved memory for the second stage bootloader */
        second_stage_bootloader: partition@0 {
            reg = <0x00000000 0x100>;
            read-only;
        };

        /*
         * Usable flash. Starts at 0x100, after the bootloader. The partition
         * size is 4MB minus the 0x100 bytes taken by the bootloader.
         */
        code_partition: partition@100 {
            reg = <0x100 (DT_SIZE_M(4) - 0x100)>;
            read-only;
        };
    };
};

/* should be some way to set this
&xosc {
    startup-delay-multiplier = <64>;
};
*/

&gpio0 {
    status = "okay";
};


&wdt0 {
    status = "okay";
};


zephyr_udc0: &usbd {
  status = "okay";
};


&uart1 {
    current-speed = <115200>;
    status = "disabled";
    pinctrl-0 = <&uart1_default>;
    pinctrl-names = "default";
};


&vreg {
    regulator-always-on;
    regulator-allowed-modes = <REGULATOR_RPI_PICO_MODE_NORMAL>;
};


&i2c0 {
      status = "okay";
      pinctrl-0 = <&i2c0_default>;
      pinctrl-names = "default";
      clock-frequency = <I2C_BITRATE_STANDARD>;

      oled: ssd1306@3c {
          compatible = "solomon,ssd1306fb";
          reg = <0x3c>;
          width = <128>;
          height = <32>;
          segment-offset = <0>;
          page-offset = <0>;
          display-offset = <0>;
          multiplex-ratio = <31>;
          segment-remap;
          com-invdir;
          com-sequential;
          inversion-on;
          prechargep = <0x22>;
      };
};


&pio0 {
    status = "okay";

    pio-ws2812 {
        status = "okay";
        compatible = "worldsemi,ws2812-rpi_pico-pio";
        pinctrl-0 = <&ws2812_pio0_default>;
        pinctrl-names = "default";
        bit-waveform = <3>, <3>, <4>;

        led_strip: ws28122 {
            status = "okay";
            gpios = <&gpio0 24 GPIO_ACTIVE_HIGH>;
            chain-length = <80>;
            color-mapping = <LED_COLOR_ID_GREEN
            LED_COLOR_ID_RED
            LED_COLOR_ID_BLUE>;
            reset-delay = <280>;
            frequency = <800000>;
        };
    };
};
